@using Microsoft.AspNetCore.Components.Web
@using FirstASPwebsite.Models
@using FirstASPwebsite.Services
@inject JsonFilePostService PostService

<div class="card-columns">
    @foreach (var post in PostService.GetPosts())
    {
        <div class="card">
            <div class="card-img"><img src="@post.ImageUrl"></div>
            <div class="card-body">
                <h5 class="card-description">@post.Description</h5>
            </div>
        </div>
        <div class="card-footer">
            <small class="text-muted">
                <button @onclick="(e => SelectPost(post.Id))" data-toggle="modal" data-target="#postModal" class="btn btn-primary">More Info</button>
            </small>
        </div>
    }
</div>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">



@if (selectedPost != null)
{
    <div class="" id="postModal" tabindex="-1" role="dialog" aria-labelledby="productTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="productTitle">@selectedPost.Id</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="card">
                        <div class="card-img" style="background-image: url('@selectedPost.ImageUrl');">
                        </div>
                        <div class="card-body">
                            <p class="card-text">@selectedPost.Description</p>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    @if(voteCount == 0)
                    {
                        <span>Be the first to vote!</span>
                    }
                    else
                    {
                        <span>@voteCount @voteLabel</span>
                    }

                    @for(int i =1; i <= 5; i++)
                    {
                        var currentStar = i;
                        if(i <= currentRating)
                        {
                            <span class="fa-star fa checked" @onclick="(e => submitRating(currentStar))"></span>
                        }
                        else
                        {
                            <span class="fa-star fa" @onclick="(e => submitRating(currentStar))"></span>

                        }
                    }
                </div>
            </div>
        </div>
    </div>
}


@code {
        Post selectedPost;
        long selectedPostId;

        void SelectPost(long postId)
        {
            selectedPostId = postId;
            selectedPost = PostService.GetPosts().First(x => x.Id == postId);
            getCurrentRating();
        }

        int currentRating = 0;
        int voteCount = 0;
        string voteLabel;

        void getCurrentRating()
        {
            if (selectedPost.Ratings == null)
            {
                currentRating = 0;
                voteCount = 0;
            }
            else
            {
                voteCount = selectedPost.Ratings.Count();
                voteLabel = voteCount > 1 ? "Votes" : "Vote";
                currentRating = selectedPost.Ratings.Sum() / voteCount;
            }
        }      
        
        void submitRating(int rating)
        {
            PostService.AddRating(selectedPostId, rating);
            SelectPost(selectedPostId);
        }
    }
